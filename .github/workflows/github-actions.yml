name: Evinced Examples CI/CD tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 0 * * *"

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    strategy:
      matrix:
        language-folder:
          - { language: "javascript", folder: "js-wdio-web" }
          - { language: "typescript", folder: "ts-wdio-web" }

    steps:
      # Send Slack notification for workflow start
      - uses: act10ns/slack@v2
        with:
          status: starting
          channel: '#workflows'
          message: "Starting tests for folder: ${{ matrix.language-folder.folder }}"
        if: always()

      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up the environment based on the language
      - name: Set up environment for ${{ matrix.language-folder.language }}
        run: |
          if [ "${{ matrix.language-folder.language }}" == "javascript" ] || [ "${{ matrix.language-folder.language }}" == "typescript" ]; then
            echo "Setting up Node.js environment"
            curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
            sudo apt-get install -y nodejs
          fi

      # Inject .npmrc with the secret from GitHub secrets
      - name: Configure .npmrc
        run: |
          echo "${{ secrets.EVINCED_NPM_TOKEN }}" > ~/.npmrc

      # Install dependencies for the test
      - name: Install dependencies
        run: |
          cd ${{ matrix.language-folder.folder }}
          npm install

      # Run tests
      - name: Run tests
        id: run-tests
        env:
          EVINCED_SERVICE_ID: ${{ secrets.EVINCED_SERVICE_ID }}
          EVINCED_API_KEY: ${{ secrets.EVINCED_API_KEY }}
        run: |
          cd ${{ matrix.language-folder.folder }}
          if [ -f "wdio.conf.js" ] || [ -f "wdio.conf.ts" ]; then
            echo "Running WebDriverIO tests"
            npm run wdio
          else
            echo "Running standard tests"
            npm run test
          fi

      # Send Slack notification for success or failure
      - uses: act10ns/slack@v2
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#workflows'
          message: |
            ${{ job.status == 'success' && 'All tests passed! :white_check_mark:' || 'THIS FAILED FIX THE DOCS LOSER :x:' }}
        if: always()
